// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: Protocol.proto
// Protobuf C++ Version: 5.29.4

#include "Protocol.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr SCEchoAck::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : text_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SCEchoAck::SCEchoAck(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SCEchoAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SCEchoAckDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SCEchoAckDefaultTypeInternal() {}
  union {
    SCEchoAck _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SCEchoAckDefaultTypeInternal _SCEchoAck_default_instance_;

inline constexpr CSEchoReq::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : text_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CSEchoReq::CSEchoReq(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CSEchoReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CSEchoReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CSEchoReqDefaultTypeInternal() {}
  union {
    CSEchoReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CSEchoReqDefaultTypeInternal _CSEchoReq_default_instance_;
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_Protocol_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_Protocol_2eproto = nullptr;
const ::uint32_t
    TableStruct_Protocol_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::CSEchoReq, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CSEchoReq, _impl_.text_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::SCEchoAck, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SCEchoAck, _impl_.text_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::CSEchoReq)},
        {9, -1, -1, sizeof(::SCEchoAck)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::_CSEchoReq_default_instance_._instance,
    &::_SCEchoAck_default_instance_._instance,
};
const char descriptor_table_protodef_Protocol_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\016Protocol.proto\"\031\n\tCSEchoReq\022\014\n\004text\030\001 "
    "\001(\t\"\031\n\tSCEchoAck\022\014\n\004text\030\001 \001(\tb\006proto3"
};
static ::absl::once_flag descriptor_table_Protocol_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_Protocol_2eproto = {
    false,
    false,
    78,
    descriptor_table_protodef_Protocol_2eproto,
    "Protocol.proto",
    &descriptor_table_Protocol_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_Protocol_2eproto::offsets,
    file_level_enum_descriptors_Protocol_2eproto,
    file_level_service_descriptors_Protocol_2eproto,
};
// ===================================================================

class CSEchoReq::_Internal {
 public:
};

CSEchoReq::CSEchoReq(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSEchoReq)
}
inline PROTOBUF_NDEBUG_INLINE CSEchoReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::CSEchoReq& from_msg)
      : text_(arena, from.text_),
        _cached_size_{0} {}

CSEchoReq::CSEchoReq(
    ::google::protobuf::Arena* arena,
    const CSEchoReq& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CSEchoReq* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:CSEchoReq)
}
inline PROTOBUF_NDEBUG_INLINE CSEchoReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : text_(arena),
        _cached_size_{0} {}

inline void CSEchoReq::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CSEchoReq::~CSEchoReq() {
  // @@protoc_insertion_point(destructor:CSEchoReq)
  SharedDtor(*this);
}
inline void CSEchoReq::SharedDtor(MessageLite& self) {
  CSEchoReq& this_ = static_cast<CSEchoReq&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.text_.Destroy();
  this_._impl_.~Impl_();
}

inline void* CSEchoReq::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CSEchoReq(arena);
}
constexpr auto CSEchoReq::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CSEchoReq),
                                            alignof(CSEchoReq));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CSEchoReq::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CSEchoReq_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CSEchoReq::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CSEchoReq>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CSEchoReq::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CSEchoReq>(), &CSEchoReq::ByteSizeLong,
            &CSEchoReq::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CSEchoReq, _impl_._cached_size_),
        false,
    },
    &CSEchoReq::kDescriptorMethods,
    &descriptor_table_Protocol_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CSEchoReq::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 22, 2> CSEchoReq::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CSEchoReq>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string text = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CSEchoReq, _impl_.text_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string text = 1;
    {PROTOBUF_FIELD_OFFSET(CSEchoReq, _impl_.text_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\11\4\0\0\0\0\0\0"
    "CSEchoReq"
    "text"
  }},
};

PROTOBUF_NOINLINE void CSEchoReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CSEchoReq)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.text_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CSEchoReq::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CSEchoReq& this_ = static_cast<const CSEchoReq&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CSEchoReq::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CSEchoReq& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:CSEchoReq)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string text = 1;
          if (!this_._internal_text().empty()) {
            const std::string& _s = this_._internal_text();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "CSEchoReq.text");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:CSEchoReq)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CSEchoReq::ByteSizeLong(const MessageLite& base) {
          const CSEchoReq& this_ = static_cast<const CSEchoReq&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CSEchoReq::ByteSizeLong() const {
          const CSEchoReq& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:CSEchoReq)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string text = 1;
            if (!this_._internal_text().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_text());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CSEchoReq::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CSEchoReq*>(&to_msg);
  auto& from = static_cast<const CSEchoReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSEchoReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_text().empty()) {
    _this->_internal_set_text(from._internal_text());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CSEchoReq::CopyFrom(const CSEchoReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSEchoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CSEchoReq::InternalSwap(CSEchoReq* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.text_, &other->_impl_.text_, arena);
}

::google::protobuf::Metadata CSEchoReq::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SCEchoAck::_Internal {
 public:
};

SCEchoAck::SCEchoAck(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SCEchoAck)
}
inline PROTOBUF_NDEBUG_INLINE SCEchoAck::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::SCEchoAck& from_msg)
      : text_(arena, from.text_),
        _cached_size_{0} {}

SCEchoAck::SCEchoAck(
    ::google::protobuf::Arena* arena,
    const SCEchoAck& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SCEchoAck* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:SCEchoAck)
}
inline PROTOBUF_NDEBUG_INLINE SCEchoAck::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : text_(arena),
        _cached_size_{0} {}

inline void SCEchoAck::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SCEchoAck::~SCEchoAck() {
  // @@protoc_insertion_point(destructor:SCEchoAck)
  SharedDtor(*this);
}
inline void SCEchoAck::SharedDtor(MessageLite& self) {
  SCEchoAck& this_ = static_cast<SCEchoAck&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.text_.Destroy();
  this_._impl_.~Impl_();
}

inline void* SCEchoAck::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SCEchoAck(arena);
}
constexpr auto SCEchoAck::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SCEchoAck),
                                            alignof(SCEchoAck));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SCEchoAck::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SCEchoAck_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SCEchoAck::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SCEchoAck>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SCEchoAck::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SCEchoAck>(), &SCEchoAck::ByteSizeLong,
            &SCEchoAck::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SCEchoAck, _impl_._cached_size_),
        false,
    },
    &SCEchoAck::kDescriptorMethods,
    &descriptor_table_Protocol_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SCEchoAck::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 22, 2> SCEchoAck::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SCEchoAck>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string text = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SCEchoAck, _impl_.text_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string text = 1;
    {PROTOBUF_FIELD_OFFSET(SCEchoAck, _impl_.text_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\11\4\0\0\0\0\0\0"
    "SCEchoAck"
    "text"
  }},
};

PROTOBUF_NOINLINE void SCEchoAck::Clear() {
// @@protoc_insertion_point(message_clear_start:SCEchoAck)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.text_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SCEchoAck::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SCEchoAck& this_ = static_cast<const SCEchoAck&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SCEchoAck::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SCEchoAck& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:SCEchoAck)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string text = 1;
          if (!this_._internal_text().empty()) {
            const std::string& _s = this_._internal_text();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "SCEchoAck.text");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:SCEchoAck)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SCEchoAck::ByteSizeLong(const MessageLite& base) {
          const SCEchoAck& this_ = static_cast<const SCEchoAck&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SCEchoAck::ByteSizeLong() const {
          const SCEchoAck& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:SCEchoAck)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string text = 1;
            if (!this_._internal_text().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_text());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SCEchoAck::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SCEchoAck*>(&to_msg);
  auto& from = static_cast<const SCEchoAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SCEchoAck)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_text().empty()) {
    _this->_internal_set_text(from._internal_text());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SCEchoAck::CopyFrom(const SCEchoAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SCEchoAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SCEchoAck::InternalSwap(SCEchoAck* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.text_, &other->_impl_.text_, arena);
}

::google::protobuf::Metadata SCEchoAck::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_Protocol_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
